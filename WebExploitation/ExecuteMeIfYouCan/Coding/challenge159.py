import hashlib
import requests
import re
import sys

cookie = "dmhk8gcl6muhcs90eav1sicod3"
url = "https://ringzer0ctf.com/challenges/159"
searching = True

def generateData():
	r = requests.get(url, cookies={"PHPSESSID":cookie})
	raw = r.text
	begin = raw.find("----- BEGIN HASH -----")+30
	end = raw.find("----- END HASH -----")-10
	given_hash = raw[begin:end]
	return given_hash.strip()

def identifyHash(_hash):
	_len = len(_hash)
	switcher = {
		32: 'md5',
		40: 'sha1'
	}
	breaker(_hash, switcher.get(_len, 'Unknown hash'))

def breaker(_hash, _type):
	global searching
	_max = 10000
	found_state = False
	for i in range(999, _max):
		if 'sha1' in _type:
			tmp_hash = hashlib.sha1(str(i).encode()).hexdigest()
		elif 'md5' in _type:
			tmp_hash = hashlib.md5(str(i).encode()).hexdigest()
		elif 'Unknown hash' in _type:
			print("Unknown hash found exiting...\n")
			sys.exit(1)
		if _hash == tmp_hash:
			found_state = True
		print("PROGRESS : {}%\r".format(i * 100 / _max), end="")
	if found_state:
		searching = False
		print("\nFOUND : {} hash of {}".format(tmp_hash, str(i)))
	else:
		print("\nHASH NOT FOUND")

if '__main__' in __name__:
	while searching:
		data = generateData()
		print("EXTRACTED HASH : {}".format(data))
		hash_type = identifyHash(data)
