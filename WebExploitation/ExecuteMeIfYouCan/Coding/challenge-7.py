import requests
import re
import base64
import subprocess
import time

#base variables
url = "https://ringzer0team.com/challenges/15"
sessId = "19em8riu1fjn3vqpbisqc8s1i6"
session = requests.session()
checksum = ""

#get data function
def get_data():
	request = session.get(url, cookies={"PHPSESSID":sessId})
	raw = request.text
	begin = raw.find("----- BEGIN Elf Message -----")+35
	end = raw.find("----- End Elf Message -----")-10
	checkBegin = raw.find("----- BEGIN Checksum -----")+35
	checkEnd = raw.find("----- END Checksum -----")-10
	content = raw[begin:end]
	checksum = raw[checkBegin:checkEnd]
	#decrypt_data(content)
	return content

#decrypt function
def decrypt_data(data):
	decrypted = ""
	tmpDec = base64.b64decode(data)
	while True:
		if base64.b64encode(base64.b64decode(tmpDec)) == tmpDec:
			tmpDec = base64.b64decode(tmpDec)
		else:
			decrypted = tmpDec[::-1]
			break
	#write_shell(decrypted)
	return decrypted

#writing shell code to file
def write_shell(data):
	file = open("test", "wb")
	file.write(data)
	file.close()
	res = subprocess.run(["./test"], stdout = subprocess.PIPE).stdout.decode("utf-8")
	return res

#sending result
def send_res(data):
	tmp_url = url + "/" + str(data)
	flag_url = tmp_url.strip()
	request = session.get(flag_url, cookies={"PHPSESSID":sessId})
	raw = request.text
	regex = r'FLAG-(\w+)'
	palag = re.findall(regex, raw)
	#print("FLAG : FLAG-",palag[0].strip())
	return palag[0]

if __name__ == "__main__":
	while True:
		startTime = time.time()
		main_data = get_data()
		shell_code = decrypt_data(main_data)
		result_data = write_shell(shell_code)
		if (time.time() - startTime) < 3:
			print("TIME : ", time.time() - startTime)
			flag = "FLAG-"+send_res(result_data).replace(" ","")
			print(flag)
			break
		else:
			print("TIME : ", time.time() - startTime)
			continue